#compdef qiniu-cdn-manager

autoload -U is-at-least

_qiniu-cdn-manager() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-c+[配置文件路径, 如果未传, 从当前目录找配置文件, 如果不存在, 尝试加载\`\$HOME/.config/qiniu-cdn.toml\`]:CONFIG: ' \
'--config=[配置文件路径, 如果未传, 从当前目录找配置文件, 如果不存在, 尝试加载\`\$HOME/.config/qiniu-cdn.toml\`]:CONFIG: ' \
'-d+[CDN域名, 会覆盖配置文件的domain字段]:DOMAIN: ' \
'--domain=[CDN域名, 会覆盖配置文件的domain字段]:DOMAIN: ' \
'--completion=[生成shell补全脚本, 支持Bash, Zsh, Fish, PowerShell, Elvish]:COMPLETION: ' \
'--debug[开启debug模式]' \
'-n[Do not print time(ms) elapsed]' \
'--no-elapsed[Do not print time(ms) elapsed]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_qiniu-cdn-manager_commands" \
"*::: :->qiniu-cdn-manager" \
&& ret=0
    case $state in
    (qiniu-cdn-manager)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:qiniu-cdn-manager-command-$line[1]:"
        case $line[1] in
            (count)
_arguments "${_arguments_options[@]}" : \
'-f+[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'--freq=[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'-r+[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global]:REGION: ' \
'--region=[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global]:REGION: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-l+[输出条数, 默认全部]:LIMIT: ' \
'--limit=[输出条数, 默认全部]:LIMIT: ' \
'--five-minute-count=[每5分钟请求次数告警阈值]:FIVE_MINUTE_COUNT: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'-n[不要发送次数告警]' \
'--no-warn[不要发送次数告警]' \
'(--domains)--all-domain[包含所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(diagnostic)
_arguments "${_arguments_options[@]}" : \
'-p+[诊断策略，支持T\:1\:200和C\:1\:10000这两种格式, 可以用&&和||连接(并用引号引起来)]:POLICY: ' \
'--policy=[诊断策略，支持T\:1\:200和C\:1\:10000这两种格式, 可以用&&和||连接(并用引号引起来)]:POLICY: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'--day=[诊断结束日, 默认当天, 如2016-07-01]:DAY: ' \
'-a[配置IP黑名单]' \
'--apply-black-ip[配置IP黑名单]' \
'-n[不覆盖已存在的ip列表，采用追加模式]' \
'--no-rewrite[不覆盖已存在的ip列表，采用追加模式]' \
'--no-qy-notify[不发送企业微信通知]' \
'--no-prompt[不弹出prompt确认]' \
'(--domains)--all-domain[包含所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(hitmiss)
_arguments "${_arguments_options[@]}" : \
'-f+[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'--freq=[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-l+[输出条数, 默认全部]:LIMIT: ' \
'--limit=[输出条数, 默认全部]:LIMIT: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'(--domains)--all-domain[包含所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" : \
'(-l --list-all-domain)-d[下载ssl证书]' \
'(-l --list-all-domain)--download-ssl-cert[下载ssl证书]' \
'(-d --download-ssl-cert)-l[列出账户下绑定的所有域名]' \
'(-d --download-ssl-cert)--list-all-domain[列出账户下绑定的所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(ipacl)
_arguments "${_arguments_options[@]}" : \
'-i+[ip列表, 多个以英文逗号隔开, 以\`d\`开头表示移除(模式需保证为no-rewrite)]:IPS: ' \
'--ips=[ip列表, 多个以英文逗号隔开, 以\`d\`开头表示移除(模式需保证为no-rewrite)]:IPS: ' \
'(-b --black -c --close)-w[设置白名单]' \
'(-b --black -c --close)--white[设置白名单]' \
'(-w --white -c --close)-b[设置黑名单]' \
'(-w --white -c --close)--black[设置黑名单]' \
'(-w --white -b --black)-c[关闭黑白名单]' \
'(-w --white -b --black)--close[关闭黑白名单]' \
'-r[覆盖已存在的ip列表，默认是追加模式]' \
'--rewrite[覆盖已存在的ip列表，默认是追加模式]' \
'--no-qy-notify[不发送企业微信通知]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(ipurl)
_arguments "${_arguments_options[@]}" : \
'-i+[要查询的IP, 请求日志一般滞后6个小时左右]:IP: ' \
'--ip=[要查询的IP, 请求日志一般滞后6个小时左右]:IP: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-l+[输出条数, 默认全部]:LIMIT: ' \
'--limit=[输出条数, 默认全部]:LIMIT: ' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(isp-count)
_arguments "${_arguments_options[@]}" : \
'-f+[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'--freq=[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'-r+[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global]:REGION: ' \
'--region=[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global]:REGION: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-l+[输出条数, 默认全部]:LIMIT: ' \
'--limit=[输出条数, 默认全部]:LIMIT: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'(--domains)--all-domain[包含所有域名]' \
'(-r --region)--region-sort[按区域排序，会查询所有区域并按请求次数从大到小排序]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(isp-traffic)
_arguments "${_arguments_options[@]}" : \
'-f+[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'--freq=[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'-r+[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global, 多个以英文逗号隔开]:REGIONS: ' \
'--regions=[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global, 多个以英文逗号隔开]:REGIONS: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-i+[ISP运营商, 比如all(所有 ISP), telecom(电信), unicom(联通), mobile(中国移动), drpeng(鹏博士), tietong(铁通), cernet(教育网)]:ISP: ' \
'--isp=[ISP运营商, 比如all(所有 ISP), telecom(电信), unicom(联通), mobile(中国移动), drpeng(鹏博士), tietong(铁通), cernet(教育网)]:ISP: ' \
'-l+[输出条数, 默认全部]:LIMIT: ' \
'--limit=[输出条数, 默认全部]:LIMIT: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'(--domains)--all-domain[包含所有域名]' \
'(-r --regions --isp-sort)--region-sort[按区域排序，会查询所有区域并按流量从大到小排序]' \
'(-i --isp --region-sort)--isp-sort[按运营商排序，会查询所有运营商并按流量从大到小排序]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(isp-traffic-ratio)
_arguments "${_arguments_options[@]}" : \
'-r+[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global, 多个以英文逗号隔开]:REGIONS: ' \
'--regions=[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global, 多个以英文逗号隔开]:REGIONS: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'(--domains)--all-domain[包含所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(log-download)
_arguments "${_arguments_options[@]}" : \
'-d+[日期, 例如 2016-07-01, 默认当天]:DAY: ' \
'--day=[日期, 例如 2016-07-01, 默认当天]:DAY: ' \
'-l+[下载条数, 默认全部]:LIMIT: ' \
'--limit=[下载条数, 默认全部]:LIMIT: ' \
'--dir=[下载目录, 默认当前目录的\`./logs\`目录]:DIR: ' \
'-n[不要将日志放在域名目录里, 和在配置文件设置\`download_log_domain_dir=false\`同义]' \
'--no-domain-dir[不要将日志放在域名目录里, 和在配置文件设置\`download_log_domain_dir=false\`同义]' \
'(--unzip-not-keep)--unzip-keep[解压缩日志并保留源压缩文件]' \
'(--unzip-keep)--unzip-not-keep[解压缩日志不保留源压缩文件]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(log-filter)
_arguments "${_arguments_options[@]}" : \
'*-f+[要过滤的字符串，支持传递多次, 以!!开头表示不包含]:FILTER_STRING: ' \
'*--filter-string=[要过滤的字符串，支持传递多次, 以!!开头表示不包含]:FILTER_STRING: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--output-file[输出到文件]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(prefetch)
_arguments "${_arguments_options[@]}" : \
'-u+[要预取url列表, 总数不超过60条, 多条以英文逗号隔开, 如：http\://bar.foo.com/test.zip]:URLS: ' \
'--urls=[要预取url列表, 总数不超过60条, 多条以英文逗号隔开, 如：http\://bar.foo.com/test.zip]:URLS: ' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(refresh)
_arguments "${_arguments_options[@]}" : \
'-u+[要刷新的url列表, 总数不超过60条, 多条以英文逗号隔开, 如：http\://bar.foo.com/index.html]:URLS: ' \
'--urls=[要刷新的url列表, 总数不超过60条, 多条以英文逗号隔开, 如：http\://bar.foo.com/index.html]:URLS: ' \
'-d+[要刷新的目录url列表, 总数不超过10条, 多条以英文逗号隔开, 如\: http\://bar.foo.com/dir/]:DIRS: ' \
'--dirs=[要刷新的目录url列表, 总数不超过10条, 多条以英文逗号隔开, 如\: http\://bar.foo.com/dir/]:DIRS: ' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" : \
'-r+[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global, 多个用英文逗号隔开]:REGIONS: ' \
'--regions=[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global, 多个用英文逗号隔开]:REGIONS: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-l+[输出条数, 默认全部]:LIMIT: ' \
'--limit=[输出条数, 默认全部]:LIMIT: ' \
'-i+[ISP运营商, 比如all(所有 ISP), telecom(电信), unicom(联通), mobile(中国移动), drpeng(鹏博士), tietong(铁通), cernet(教育网)]:ISP: ' \
'--isp=[ISP运营商, 比如all(所有 ISP), telecom(电信), unicom(联通), mobile(中国移动), drpeng(鹏博士), tietong(铁通), cernet(教育网)]:ISP: ' \
'-f+[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'--freq=[粒度, 可选项为 5min、1hour、1day, 默认1day]:FREQ: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'(--domains)--all-domain[包含所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(top)
_arguments "${_arguments_options[@]}" : \
'-r+[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global]:REGION: ' \
'--region=[区域, global oversea china beijing...,更多请移步 https\://developer.qiniu.com/fusion/4081/cdn-log-analysis#region, 默认global]:REGION: ' \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-l+[输出条数, 默认全部]:LIMIT: ' \
'--limit=[输出条数, 默认全部]:LIMIT: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'(-u --url)-i[IP模式(默认)]' \
'(-u --url)--ip[IP模式(默认)]' \
'(-i --ip)-u[URL模式]' \
'(-i --ip)--url[URL模式]' \
'(-c --count)-t[根据流量查询(默认)]' \
'(-c --count)--traffic[根据流量查询(默认)]' \
'(-t --traffic)-c[根据请求数量查询]' \
'(-t --traffic)--count[根据请求数量查询]' \
'(--domains)--all-domain[包含所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(traffic)
_arguments "${_arguments_options[@]}" : \
'-s+[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'--start-date=[开始日期, 例如：2016-07-01, 默认当天]:START_DATE: ' \
'-e+[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'--end-date=[结束日期, 例如：2016-07-03, 默认当天]:END_DATE: ' \
'-g+[粒度, 取值：5min/hour/day,  默认day]:GRANULARITY: ' \
'--granularity=[粒度, 取值：5min/hour/day,  默认day]:GRANULARITY: ' \
'--five-minute-traffic=[每5分钟流量告警(MB)阈值]:FIVE_MINUTE_TRAFFIC: ' \
'--domain-exclude=[排除域名，多个以英文逗号隔开]:DOMAIN_EXCLUDE: ' \
'(--all-domain)--domains=[域名，多个以英文逗号隔开]:DOMAINS: ' \
'--no-print[不要打印流量明细]' \
'--no-warn[不要发送流量告警]' \
'(--domains)--all-domain[包含所有域名]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_qiniu-cdn-manager__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:qiniu-cdn-manager-help-command-$line[1]:"
        case $line[1] in
            (count)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(diagnostic)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(hitmiss)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(ipacl)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(ipurl)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(isp-count)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(isp-traffic)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(isp-traffic-ratio)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(log-download)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(log-filter)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(prefetch)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(refresh)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(status)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(top)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(traffic)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_qiniu-cdn-manager_commands] )) ||
_qiniu-cdn-manager_commands() {
    local commands; commands=(
'count:查询请求次数' \
'diagnostic:诊断疑似IP' \
'hitmiss:查询命中率' \
'info:查询域名信息' \
'ipacl:IP黑/白名单' \
'ipurl:查询IP的URL请求次数' \
'isp-count:查询运营商请求次数' \
'isp-traffic:查询运营商流量' \
'isp-traffic-ratio:查询运营商流量占比' \
'log-download:下载请求日志' \
'log-filter:过滤请求日志' \
'prefetch:文件预取' \
'refresh:刷新CDN缓存' \
'status:查询状态码' \
'top:查询TOP请求' \
'traffic:查询计费流量' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'qiniu-cdn-manager commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__count_commands] )) ||
_qiniu-cdn-manager__count_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager count commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__diagnostic_commands] )) ||
_qiniu-cdn-manager__diagnostic_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager diagnostic commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help_commands] )) ||
_qiniu-cdn-manager__help_commands() {
    local commands; commands=(
'count:查询请求次数' \
'diagnostic:诊断疑似IP' \
'hitmiss:查询命中率' \
'info:查询域名信息' \
'ipacl:IP黑/白名单' \
'ipurl:查询IP的URL请求次数' \
'isp-count:查询运营商请求次数' \
'isp-traffic:查询运营商流量' \
'isp-traffic-ratio:查询运营商流量占比' \
'log-download:下载请求日志' \
'log-filter:过滤请求日志' \
'prefetch:文件预取' \
'refresh:刷新CDN缓存' \
'status:查询状态码' \
'top:查询TOP请求' \
'traffic:查询计费流量' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'qiniu-cdn-manager help commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__count_commands] )) ||
_qiniu-cdn-manager__help__count_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help count commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__diagnostic_commands] )) ||
_qiniu-cdn-manager__help__diagnostic_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help diagnostic commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__help_commands] )) ||
_qiniu-cdn-manager__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help help commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__hitmiss_commands] )) ||
_qiniu-cdn-manager__help__hitmiss_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help hitmiss commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__info_commands] )) ||
_qiniu-cdn-manager__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help info commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__ipacl_commands] )) ||
_qiniu-cdn-manager__help__ipacl_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help ipacl commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__ipurl_commands] )) ||
_qiniu-cdn-manager__help__ipurl_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help ipurl commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__isp-count_commands] )) ||
_qiniu-cdn-manager__help__isp-count_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help isp-count commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__isp-traffic_commands] )) ||
_qiniu-cdn-manager__help__isp-traffic_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help isp-traffic commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__isp-traffic-ratio_commands] )) ||
_qiniu-cdn-manager__help__isp-traffic-ratio_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help isp-traffic-ratio commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__log-download_commands] )) ||
_qiniu-cdn-manager__help__log-download_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help log-download commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__log-filter_commands] )) ||
_qiniu-cdn-manager__help__log-filter_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help log-filter commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__prefetch_commands] )) ||
_qiniu-cdn-manager__help__prefetch_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help prefetch commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__refresh_commands] )) ||
_qiniu-cdn-manager__help__refresh_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help refresh commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__status_commands] )) ||
_qiniu-cdn-manager__help__status_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help status commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__top_commands] )) ||
_qiniu-cdn-manager__help__top_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help top commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__help__traffic_commands] )) ||
_qiniu-cdn-manager__help__traffic_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager help traffic commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__hitmiss_commands] )) ||
_qiniu-cdn-manager__hitmiss_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager hitmiss commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__info_commands] )) ||
_qiniu-cdn-manager__info_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager info commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__ipacl_commands] )) ||
_qiniu-cdn-manager__ipacl_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager ipacl commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__ipurl_commands] )) ||
_qiniu-cdn-manager__ipurl_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager ipurl commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__isp-count_commands] )) ||
_qiniu-cdn-manager__isp-count_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager isp-count commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__isp-traffic_commands] )) ||
_qiniu-cdn-manager__isp-traffic_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager isp-traffic commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__isp-traffic-ratio_commands] )) ||
_qiniu-cdn-manager__isp-traffic-ratio_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager isp-traffic-ratio commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__log-download_commands] )) ||
_qiniu-cdn-manager__log-download_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager log-download commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__log-filter_commands] )) ||
_qiniu-cdn-manager__log-filter_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager log-filter commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__prefetch_commands] )) ||
_qiniu-cdn-manager__prefetch_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager prefetch commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__refresh_commands] )) ||
_qiniu-cdn-manager__refresh_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager refresh commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__status_commands] )) ||
_qiniu-cdn-manager__status_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager status commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__top_commands] )) ||
_qiniu-cdn-manager__top_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager top commands' commands "$@"
}
(( $+functions[_qiniu-cdn-manager__traffic_commands] )) ||
_qiniu-cdn-manager__traffic_commands() {
    local commands; commands=()
    _describe -t commands 'qiniu-cdn-manager traffic commands' commands "$@"
}

if [ "$funcstack[1]" = "_qiniu-cdn-manager" ]; then
    _qiniu-cdn-manager "$@"
else
    compdef _qiniu-cdn-manager qiniu-cdn-manager
fi
